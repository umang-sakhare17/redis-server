This file acts as a log of the progress I have made each day and what is next in the pipeline.

29/05/25: 
- Setup the basic file structure for the code.
- Created a main function to run the program. Here we are creating an object of the class RedisServer which runs the whole thing.
- Defined some basic functionality in RedisServer.cpp and created a header file for it.
- Header file basically contains a template for all that will go in the cpp file.
- Did some socket programming to get the server to connect to a port. 
    - Involving creating a socket, binding it to a port and listening on it.
- Additionally also defined a function to shut down the server if the socket ever dies.
- NEXT UP: I will create data persistance by saving the contents in a database every fixed amount of time.

30/05/25:
- We are creating 3 main classes:
    - RedisServer class which will basically run and shut down the server.
    - RedisCommandHandler class which will get commands from redis client and process them. 
    - RedisDatabase class which will execute the commands identified by the command handler and return a proper RESP response.
    - RedisServer -> (Redis Client ->) RedisCommandHandler -> RedisDatabase -> RedisCommandHandler -> Redis Client

- Created a parser function that takes RESP input and parses it into executable commands.
- Created a command that executes the parser and the following commands.
- NEXT UP: Test the parser and implement the database side of things.

04/06/25:
- Wanted to verify the logic behind parseRespCommand().
- Wrote dummy test file that executes the logic and tests for corner cases.

07/06/25
- Start off by integrating the command handler in the redis server file
- Made make file to build the whole project
- Did bug fixing to sucessfully build
- NEXT UP: Write code to implement RedisDatabase